#!/bin/bash


pkg update && pkg upgrade -y
if command -v which; then
	echo "installed"
else
	pkg install which
fi
if which make; then
	echo "installed"
else
	pkg install make
fi
if which python; then
	echo "installed"
else
	pkg install python
fi
if which lua; then
	echo "installed"
else
	pkg install lua54
fi
if which ninja; then
	echo "installed"
else
	pkg install ninja
fi

if which termux-api; then
	echo "installed"
else	
	pkg install termux-api
fi

if which python3.12; then
	echo "installed"
else
	pkg install python3.12-venv
fi

# Check for arguments
if [ -z "$1"  ]; then 
	echo "No server specified. Please enter server name. e.g. pkg-mason-install clangd"
	exit 1
fi

SERVER_NAME="$1"

if [ $SERVER_NAME = "clangd" ]; then
	SERVER_NAME=$"clang"
fi
	
IS_INSTALLED=$(which "$SERVER_NAME")

if [ -z "$IS_INSTALLED" ]; then
	
	if [ $SERVER_NAME = asm-lsp ]; then 
		echo "Installing $SERVER_NAME from rust cargo..."
		curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
		cargo install $SERVER_NAME -y
	fi

	if [ $SERVER_NAME = "bash-language-server" ]; then
		echo "Installing $SERVER_NAME..."
		pkg install nodejs
		npm install -g $SERVER_NAME
	fi

	IS_INSTALLED=$(which "$SERVER_NAME")

	if [ -z "$IS_INSTALLED" ]; then
		echo "${SERVER_NAME} is not installed. "
		echo "Installing $SERVER_NAME..."
		pkg install $SERVER_NAME
	fi
else
	echo "$SERVER_NAME is already installed"
fi

if [ $SERVER_NAME = "clang" ]; then
	SERVER_NAME=$"clangd"
fi

SERVER_PATH=$(which "$SERVER_NAME")

if [ -z "$SERVER_PATH" ]; then
echo "Didn't find path to ${SERVER_NAME}."
exit 1
fi

echo "$SERVER_NAME path: $SERVER_PATH"

MASON_PATH="$HOME/.local/share/nvim/mason/packages/"$SERVER_NAME"/libexec"

LINK_PATH="$MASON_PATH/$SERVER_NAME"

if [ -L "$LINK_PATH" ]; then
	echo "symbolic link already exist"
	exit 1
fi

if mkdir -p "$MASON_PATH"; then
	echo "SUCCESS: Path to mason packages $MASON_PATH"
else
	echo "Couldn't create directory"
fi

echo "Linking to mason path..."
if ln -sf "$SERVER_PATH" "$MASON_PATH"/"$SERVER_NAME"; then
	echo "Linking was succesful"
else
	echo "ERROR: linking failed."
	exit 1
fi

echo "All done. Maybe it works maybe it wont. These things never work when needed."

